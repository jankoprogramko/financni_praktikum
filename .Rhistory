bewd
bewd[[3]]
bewd[[2]]
bewd[[2]] = (def=2500)
bewd[[1]] = (atk=3000)
bewd
bewd[[2]] = (def=3000)
bewd
bewd = v(atk=3000, def=2500)
bewd = c(atk=3000, def=2500)
bewd
attr(bewd,"Type") = "Dragon"
attr(bewd,"Effect") = "NO"
bewd
attributes(bewd)
bewd[["atk"]]
bewd[[atk]]
bewd[["atk"]]
names(bewd) <- c("napad","obramba")
bewd
names(bewd) -> c("napad","obramba")
names(bewd) = c("nap","obr")
bewd
names(bewd)
attributes(bewd)
bewd
v <- c("atk","def","type","effect","def","effect")
v
f <- factor(v)
f
capture.output(dput(f))
bewd <- structure(c(1L,2L,3L,4L), .Label=c("name","type","atk","def"),class="factor")
bewd
f <- structure(c(1L,2L,3L,4L), .Label=c("name","type","atk","def"),class="factor")
f
v = seq(1,15,4)
v
v = seq(1,30,3)
v
length(v)
attr(v,"dim") <- c(5,2)
v
m <- structure(seq(1,15,2), dim = c(2,4))
m
names(m)
nrows(m)
nrow(m)
ncol(m)
length(m)
dim(m)
rownames(m) <- c("prva","druga")
colnames(m) <- c("prvi", "drugi","tretji","četrti")
names(m)
rownames(m)
colnames(m)
m[2,4]
dim(m) <-c(1,8)
m
dim(m) <- c(8,1)
m
rownames(m)
colnames(m)
atributes(m)
attributes(m)
v <- 1:20
attributes(v)
l <- list("ata", 6772, TRUE, "MAMA")
l
l[[2]]
l[[4]]
as.character(l)
l
is.numeric(l[[2]])
ischaracter(l[[4]])
is.character(l[[4]])
is.logical(l[[3]])
is.logical(l[[4]])
names(l) <- c("starš1","število", "logika", "starš2")
names(l)
l
l[[2]]
l[[število]]
l[["število"]]
l$starš1
l$število
crneti <- data.frame(ime=c("stane","ivi","tim","jan"),starost=c(50,40,15,22))
crneti
crneti[[2]]
crneti[1]
crneti(1)
crneti[2]
crneti[2,2]
crneti[1,1]
colnames(crneti)
rownames(crneti)
rownames(crneti) <- c(oce,mama,sin1,sin2)
rownames(crneti) <- c("oce","mama","sin1","sin2")
crneti
row.names(crneti) <- c("oce","mama","sin1","sin2")
crneti
crneti[c(1,1)]
crneti
levels(crneti)
crneti[2,2]
{a = 2; b = a/0.5; c = a+b^2}
{a = 2; b = a/0.5; a+b^2; c = a+b}
{a = 2; b = a/0.5; a+b^2; c = a+b}
{a = 2; b = a/0.5; a+b^2; a+b}
if (a > 3) print(a) else a <- a+1
if (a > 3) print(a) else a <- a+1
if (a > 3) print(a) else a <- a+1
if (a > 6) print(a) else a <- a+1 print("še kar je manjši")
if (a > 6) print(a) else {a <- a+1; print("še kar je manjši")}
if (a > 6) print(a) else {a <- a+1; print("še kar je manjši")}
if (a > 6) print(a) else {a <- a+1; print("še kar je manjši")}
if (a > 6) print(a) else {a <- a+1; print("še kar je manjši")}
if (a < 10) {a <- a + 1; a <- a + 1; print("Morda pa je zdaj čez tri ...")}
if (a < 10) {a <- a + 1; a <- a + 1; print("Morda pa je zdaj čez tri ...")}
if (a < 10) {a <- a + 1; a <- a + 1; print("Morda pa je zdaj čez tri ...")}
if (a < 10) {a <- a + 1; a <- a + 1; print("Morda pa je zdaj čez tri ...")}
if (a < 13) {a <- a + 1; print("Morda pa je zdaj čez tri ...")}
if (a < 13) {a <- a + 1; print("Morda pa je zdaj čez tri ...")}
if (a < 13) {a <- a + 1; print("Morda pa je zdaj čez tri ...")}
if (a < 13) {a <- a + 1; print("Morda pa je zdaj čez tri ...")}
a=1
while (a != 6) {}
while (a != 6) {}
while (a != 6) {a = a +1; print("ni 6 je pa"); print(a)}
while (a != 10) {a = a +1; print("ni 10 je pa"); print(a)} else print("sedaj je 10")
getwd()
f <- function(a,b) {abs(a^2 - b^2)}
f(3,9)
g <- function(niz1, niz2, st) {repeat {print(niz1);st = st +1;if (st == 3) {print(niz2)} break}}
g <- function(niz1, niz2, st) {repeat {print(niz1);st = st +1;if (st == 3) print(niz2) break}}
g <- function(niz1, niz2, st) {repeat {print(niz1);st = st +1;if (st == 3)   break}}
g("janez","martin",1)
g <- function(niz1, niz2, st) {repeat {print(niz1);st = st +1;if (st == 3)   print(niz2)}}
g("janez","martin",1)
g <- function(niz1, niz2, st) {repeat {print(niz1);st = st +1;if (st == 3)   print(niz2)}}
g <- function(niz1, niz2, st) {repeat {print(niz1);st = st +1;if (st == 3)   print(niz2) break}}
g <- function(niz1, niz2, st) {repeat {print(niz1);st = st +1;if (st == 3)   print(niz2); break}}
g("janez","martin",1)
View(g)
i=0
repeat {print(i); i <- i + 1; if (i > 2) break}
repeat {print(i); i <- i + 1; if (i > 2) print("kul") break}
k=0
if (k<3) {print("povečujemo"); k = k+1} else print(k)
f <- function(k) {if (k<3) {print("povečujemo"); k = k+1} else f(k)}
rm(k)
f(0)
f <- function(k) {if (k<3) {print("povečujemo"); k = k+1; f(k)} else f(k)}
f(0)
install.packages("dplyr")
install.packages("dplyr")
library("dplyr")
git config --global user.email "jan.chrne@gmail.com"
git config --global user.email "jan.chrne@gmail.com"
git config --global user.name "Jan Črne"
git config --global user.email "jan.chrne@gmail.com"
git config--global user.email "jan.chrne@gmail.com"
gitconfig--global user.email "jan.chrne@gmail.com"
git config --global user.email "jan.chrne@gmail.com"
git config --global user.name "Jan Črne"
git config --global user.name "Jan Crne"
git config --global user.name "Jan Crne"
git config --global user.name "Jan Črne"
git config --global user.email "jan.chrne@gmail.com"
/etc/gitconfig
etc/gitconfig
gitconfig
gitconfig --global user.email "jan.chrne@gmail.com"
gitconfig --global user.email "jan.chrne@gmail.com"
git config --global user.email "jan.chrne@gmail.com"
git config --global user.email "jan.chrne@gmail.com"
git config --global user.name "HP"
180*radiani/pi
source('C:/Users/HP/Desktop/APPR_vaje/osnovno programiranje/funkcije.r')
source('C:/Users/HP/Desktop/APPR_vaje/osnovno programiranje/funkcije.r')
source('C:/Users/HP/Desktop/APPR_vaje/osnovno programiranje/funkcije.r')
source('C:/Users/HP/Desktop/APPR_vaje/osnovno programiranje/funkcije.r')
help paste
paste
help("paste")
source('C:/Users/HP/Desktop/APPR_vaje/osnovno programiranje/funkcije.r')
source('C:/Users/HP/Desktop/APPR_vaje/osnovno programiranje/krmilni_stavki.r')
seq(50,10,10)
seq(50,10,-10)
1:4^2
mean(c(4, 3, 2, 4, 3, 3, 5))
source('C:/Users/HP/Desktop/APPR_vaje/vektorji in razpredelnice/osnovni_gradniki_vektorjev.r', encoding = 'UTF-8')
source('C:/Users/HP/Desktop/APPR_vaje/vektorji in razpredelnice/osnovni_gradniki_vektorjev.r', encoding = 'UTF-8')
y <- c(3, 7, 1, 5, 9)
oreder(y)
order(y)
y[order(y)]
source('C:/Users/HP/Desktop/APPR_vaje/vektorji in razpredelnice/indeksi.r', encoding = 'UTF-8')
source('C:/Users/HP/Desktop/APPR_vaje/vektorji in razpredelnice/indeksi.r', encoding = 'UTF-8')
opisne.ocene <- c("manj uspešno", "uspešno", "zelo uspešno")
telovadba <- c("manj uspešno", "zelo uspešno", "uspešno", "uspešno")
Telovadba <- factor(telovadba, levels=opisne.ocene, ordered=TRUE)
opisne.ocene
telovadba
Telovadba
help("factor")
matematika <- c(4, 2, 5, 3)
names(matematika) <- c("Janez", "Micka", "Lojzka", "Franci")
Sola <- data.frame(matematika, sportna.vzgoja=Telovadba)
Sola
Telovadba
source('C:/Users/HP/Desktop/APPR_vaje/vektorji in razpredelnice/imena_in_razpredelnice.r', encoding = 'UTF-8')
source('C:/Users/HP/Desktop/APPR_vaje/vektorji in razpredelnice/imena_in_razpredelnice.r', encoding = 'UTF-8')
kategorije <- c("majhen otok", "velik otok", "celina")
velikosti <- character(length(otoki))
velikosti
velikosti[otoki > 5000] <- "celina"
velikosti[otoki >= 100 & otoki <= 5000] <- "velik otok"
velikosti[otoki < 100] <- "majhen otok"
Velikosti <- factor(velikosti, levels=kategorije, ordered=TRUE)
Otoki <- data.frame(kvadratni.kilometri=round(otoki),
kvadratne.milje=islands,
kategorija=Velikosti)
Otoki
source('C:/Users/HP/Desktop/APPR_vaje/vektorji in razpredelnice/imena_in_razpredelnice.r', encoding = 'UTF-8')
source('C:/Users/HP/Desktop/APPR_vaje/osnovno programiranje/krmilni_stavki.r', encoding = 'UTF-8')
View(fibonacci)
source('C:/Users/HP/Desktop/APPR_vaje/vektorji in razpredelnice/uporaba_funkcij_na_vektorjih_in_razpredelnicah.r', encoding = 'UTF-8')
source('C:/Users/HP/Desktop/APPR_vaje/vektorji in razpredelnice/uporaba_funkcij_na_vektorjih_in_razpredelnicah.r', encoding = 'UTF-8')
help("cat")
for (x in 1:10) {}
for (x in 1:10) {cat(x,"\n")}
for (x in 1:10) {cat(x)}
help("runif")
for (x in 1:10) {cat("x\n")}
source('C:/Users/HP/Desktop/APPR_vaje/branje podatkov/zanka_for.r', encoding = 'UTF-8')
source('C:/Users/HP/Desktop/APPR_vaje/branje podatkov/branje_in_obdelava_podatkov.r', encoding = 'UTF-8')
View(M)
View(Z)
View(imena.moski)
View(imena.zenske)
help("parse_interger")
??parse_interger
"??parse_interger"
setwd("~/")
View(imena)
filter(imena, ime == "Bojan")
imena %>% filter(leto == 2013, spol == "zenske", stevilo <= 5)
imena %>% filter(leto == 2013, spol == "zenske", stevilo <= 5) %>%  select(ime, stevilo)
imena %>% group_by(leto, spol)
imena
View(imena)
imena %>% group_by(leto, spol) %>% summarise(prebivalstvo=sum(stevilo))
imena %>% filter(leto == 2019) %>% group_by(ime) %>% summarise(stevilo=sum(stevilo)) %>% arrange(desc(stevilo)) %>% head(20)
imena %>% filter(leto == 2019) %>% group_by(ime)
imena2 <- imena %>% filter(leto == 2019) %>% group_by(ime)
View(imena2)
source('C:/Users/HP/Desktop/APPR_vaje/branje podatkov/branje_in_obdelava_podatkov.r', encoding = 'UTF-8')
source('C:/Users/HP/Desktop/APPR_vaje/branje podatkov/branje_in_obdelava_podatkov.r', encoding = 'UTF-8')
paste("10 = 1", 1:8, 8:1, sep="+")
cat("S", "cat", "izpišemo", "zlepljen", "niz.")
substr("abcčdefgh", 3, 5)
??substr
help("substr")
strsplit("Tale niz bomo razbili na besede.", split=" ", fixed=TRUE)
unlist(strsplit("Tale niz bomo razbili na besede.", split=" ", fixed=TRUE))
paste(1:10, collapse=",")
paste(1:10)
gsub("[aeiou]", "", "Ostali smo brez samoglasnikov!", ignore.case=TRUE)
gsub("[aeiou]", "", "Ostali smo brez samoglasnikov!")
gsub("[aeiou]", "", "Ostali smo brez samoglasnikov!", ignore.case=TRUE)
help("gsub")
gsub("[aeiou]", "", "Ostali smo brez samoglasnikov!", ignore.case=TRUE)
help("gsub")
d <- dir()
d
z <- grep("\\.csv$", d)
z
d[z]
source('C:/Users/HP/Desktop/APPR_vaje/branje podatkov iz spletnih strani/obdelava_nizov.r', encoding = 'UTF-8')
source('C:/Users/HP/Desktop/APPR_vaje/branje podatkov iz spletnih strani/obdelava_nizov.r', encoding = 'UTF-8')
source('C:/Users/HP/Desktop/APPR_vaje/branje podatkov iz spletnih strani/uvoz_podatkov_s_spletnih_strani.r', encoding = 'UTF-8')
link <- "http://sl.wikipedia.org/wiki/Seznam_ob%C4%8Din_v_Sloveniji"
stran <- html_session(link) %>% read_html()
library(rvest)
library(gsubfn)
library(readr)
library(dplyr)
options(gsubfn.engine="R")
stran <- html_session(link) %>% read_html()
View(stran)
tabela <- stran %>% html_nodes(xpath="//table[@class='wikitable sortable']") %>% .[[1]] %>% html_table(dec=",")
View(tabela)
summary(tabela)
colnames(tabela) <- c("obcina", "povrsina", "prebivalci", "gostota", "naselja","ustanovitev", "pokrajina", "regija", "odcepitev")
sl <- locale("sl", decimal_mark=",", grouping_mark=".")for (col in c("prebivalci", "naselja", "ustanovitev")) {
#       tabela[[col]] <- parse_number(tabela[[col]], na="-", locale=sl)
#     }
sl <- locale("sl", decimal_mark=",", grouping_mark=".")for (col in c("prebivalci", "naselja", "ustanovitev")){tabela[[col]] <- parse_number(tabela[[col]], na="-", locale=sl)}
sl <- locale("sl", decimal_mark=",", grouping_mark=".")
View(sl)
View(sl)
for (col in c("prebivalci", "naselja", "ustanovitev")) {tabela[[col]] <- parse_number(tabela[[col]], na="-", locale=sl)}
summary(tabela)
help("strapply")
help("lapply")
source('C:/Users/HP/Desktop/APPR_vaje/branje podatkov iz spletnih strani/uvoz_podatkov_s_spletnih_strani.r', encoding = 'UTF-8')
source('C:/Users/HP/Desktop/APPR_vaje/branje podatkov iz spletnih strani/uvoz_podatkov_s_spletnih_strani.r', encoding = 'UTF-8')
source('C:/Users/HP/Desktop/APPR_vaje/branje podatkov iz spletnih strani/obdelava_nizov.r', encoding = 'UTF-8')
setwd("~/FP_1.naloga")
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
View(euribor)
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
napoved3m
length(napoved3m)
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
Napoved3m
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
Napoved3m
napoved3m
attributes(napoved3m)
?head
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
letters
head(letters, n =-6)
head(letters, n =6)
Napoved3m
lenght(napoved3m)
length(napoved3m)
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
Napoved3m == Napoved3m2
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
Napoved3m == Napoved3m2
napoved3m
Napoved3m2
source('~/FP_1.naloga/Zavrtanik1.R', encoding = 'UTF-8')
source('~/FP_1.naloga/Zavrtanik1.R', encoding = 'UTF-8')
View(zdruzena)
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
View(euribor)
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
euribor == združena
euribor == zdruzena
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
euribor == zdruzena
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/Zavrtanik1.R', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
Napoved3m == napoved3m
source('~/FP_1.naloga/Zavrtanik1.R', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
napoved3mJ == term
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
napoved3mJ == term
napoved3mJ == terminske3m6m
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
Napoved3m == napoved3m
napoved3m
Napoved3m
Napoved3m == napoved3m
length(Napoved3m)
length(napoved3m)
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
Napoved3m == napoved3m
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
primerjavaOM
View(primerjavaOM)
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
primerjavaOM == napovedi
View(napovedi)
?cbind
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
euribor[0,5]
euribor[,5]
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
leto14 == y14
leto15 == y15
leto16 == y16
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
Xleto14 == x14
Xleto15 == x15
Xleto16 == x16
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
Xleto14 == x14
Xleto15 == x15
Xleto16 == x16
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
?abline
#1. naloga
#naloga a)
#uvoz podatkov za leta 2014,2015,2016
celoleto14<- read.csv("hist_EURIBOR_2014.csv", header=TRUE, row.names = 1)
celoleto15 <- read.csv("hist_EURIBOR_2015.csv", header=TRUE, row.names = 1)
celoleto16 <- read.csv("hist_EURIBOR_2016.csv", header=TRUE, row.names = 1)
#naloga b)
#izbira podatkov na prve delovne dneve v posameznih mesecih
leto14 <- celoleto14[c("X2.01.2014","X3.02.2014","X3.03.2014","X1.04.2014","X2.05.2014","X2.06.2014","X1.07.2014","X1.08.2014","X1.09.2014","X1.10.2014","X3.11.2014","X1.12.2014")]
leto15 <- celoleto15[c("X02.01.2015","X02.02.2015","X02.03.2015","X01.04.2015","X04.05.2015","X01.06.2015","X01.07.2015","X03.08.2015","X01.09.2015","X01.10.2015","X02.11.2015","X01.12.2015")]
leto16 <- celoleto16[c("X04.01.2016","X01.02.2016","X01.03.2016","X01.04.2016","X02.05.2016","X01.06.2016","X01.07.2016","X01.08.2016","X01.09.2016","X03.10.2016","X01.11.2016","X01.12.2016")]
#transponiranje
leto14 <- t(leto14)
leto15 <- t(leto15)
leto16 <- t(leto16)
#združitev v eno tabelo
zdruzena <- rbind(leto14,leto15,leto16)      #1b
#naloga c)
#vzamemo samo stolpca "3m"(5.) in "6m"(6.)
Euribor3m<-zdruzena[,5]
Euribor6m<-zdruzena[,6]
#združimo v eno tabelo
Euribor3m6m <- cbind(Euribor3m,Euribor6m)
#ureditev časovne vrste
myts <- ts(Euribor3m6m, start=c(2014, 1), end=c(2016, 12), frequency=12)
#izris grafa
ts.plot(myts, gpars=list(xlab="Time", ylab="%", main="Euribor"),col=c("black","red"))     #1c
#ureditev legende
legend("topright", legend=c("3m","6m"), col=c("black","red"), lty=1)
###########################
#2. naloga
#naloga a)
#izbira datumov X2.01.2014(1), X04.05.2015(2), X01.08.2016(3)
zdruzena1<-zdruzena[1,]
zdruzena2<-zdruzena[17,]
zdruzena3<-zdruzena[32,]
#združimo v eno tabelo
#zdruzena123<-cbind(zdruzena1,zdruzena2,zdruzena3)
#naloga b)
#ureditev časovnice
casovnaos<- c(3/13,6/13,1,2,3,6,9,12)
#izris grafa
plot(casovnaos, zdruzena1, ylim=c(-0.4,0.7), xlab="Dospetje [mesec]", ylab="%", main="Casovna struktura Euribor", type="o", col="blue", lty=1)
#dodamo 2. krivuljo
points(casovnaos, zdruzena2, col="orange")
lines(casovnaos, zdruzena2, col="orange", lty=1)
#dodamo 3. krivuljo
points(casovnaos, zdruzena3, col="red")
lines(casovnaos, zdruzena3, col="red", lty=1)
#dodamo tekst
text(11,-0.15, "1.8.2016",cex = .8, col="red")
text(11,0.23, "4.5.2015",cex = .8, col="orange")
text(11,0.6, "2.1.2014",cex = .8, col="blue")
#ureditev legende
#legend("topright", legend=c("2.1.2014","4.5.2015","1.8.2016"), col=c("blue","orange","red"), lty=1)
##########################
#3. naloga
#naloga a)
#uporabimo enacbo
terminske3m6m <- (1/(6-3))* ((1+6*Euribor3m6m[,2])/(1+3*Euribor3m6m[,1]) - 1)
#naloga b)
#odstranimo zadnje 3 elemente vektorja
term<-head(terminske3m6m,-3)
#dodamo 3 'NA' elemente
napoved3m <- c(NA,NA,NA,term)
#zdruzimo v eno tabelo
napovedi <- cbind(Euribor3m6m,napoved3m)   #3b
#naloga c)
######narisemo graf
#definiramo y-os
y14<-Euribor3m[4:12]
y15<-Euribor3m[13:24]
y16<-Euribor3m[25:36]
#definiramo x-os
x14<-term[1:9]
x15<-term[10:21]
x16<-term[22:33]
Yleto14==y14
Yleto15==y15
Yleto16==y16
plot(x14,y14,ylim=c(-0.9,0.4),xlim=c(-0.9,0.4), xlab="Napoved", ylab="Opazovano", main="3m Euribor 2014-16 LENART",col="red",pch=16)
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
points(x15,y15, col="blue",pch=16)
points(x16,y16, col="grey",pch=16)
points(x15,y15, col="blue",pch=16)
points(x16,y16, col="grey",pch=16)
abline(a=0,b=1,col="black",lty=2)
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
?lm
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
abline(lm(Euribor3m[4:36]~term),col="black")
source('~/FP_1.naloga/Zavrtanik1.R', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
source('~/FP_1.naloga/obrstovanje.r', encoding = 'UTF-8')
